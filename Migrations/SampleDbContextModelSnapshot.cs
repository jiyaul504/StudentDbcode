// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentDbcode.Models;

#nullable disable

namespace StudentDbcode.Migrations
{
    [DbContext(typeof(SampleDbContext))]
    partial class SampleDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StudentDbcode.Models.TblCountry", b =>
                {
                    b.Property<int>("CountryId")
                        .HasColumnType("int")
                        .HasColumnName("CountryID");

                    b.Property<string>("CountryName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.HasKey("CountryId")
                        .HasName("PK__tblCount__10D160BF57F2DAED");

                    b.ToTable("tblCountry", (string)null);
                });

            modelBuilder.Entity("StudentDbcode.Models.TblGender", b =>
                {
                    b.Property<int>("GenderId")
                        .HasColumnType("int")
                        .HasColumnName("GenderID");

                    b.Property<string>("Gender")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.HasKey("GenderId")
                        .HasName("PK__tblGende__4E24E817571E227A");

                    b.ToTable("tblGender", (string)null);
                });

            modelBuilder.Entity("StudentDbcode.Models.TblIdtype", b =>
                {
                    b.Property<int>("IdtypeId")
                        .HasColumnType("int")
                        .HasColumnName("IDTypeID");

                    b.Property<string>("Idtype")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("IDType");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.HasKey("IdtypeId")
                        .HasName("PK__tbl_IDTy__3B6BCFA7F7E959E4");

                    b.ToTable("tbl_IDType", (string)null);
                });

            modelBuilder.Entity("StudentDbcode.Models.TblStudent", b =>
                {
                    b.Property<string>("StudentGid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("StudentGID");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CountryID")
                        .HasColumnType("int");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("DateofBirth")
                        .HasColumnType("date");

                    b.Property<string>("FullAddress")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Idnumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("IDNumber");

                    b.Property<int>("Idtype")
                        .HasColumnType("int")
                        .HasColumnName("IDType");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<DateOnly>("MDate")
                        .HasColumnType("date")
                        .HasColumnName("mDate");

                    b.Property<DateTime>("MDateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("mDateTime");

                    b.Property<int>("Nationality")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PlaceofBirth")
                        .HasColumnType("int");

                    b.Property<string>("StudentName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("TblCountryCountryId")
                        .HasColumnType("int");

                    b.Property<int>("TblGenderGenderId")
                        .HasColumnType("int");

                    b.Property<int>("TblIdtypeIdtypeId")
                        .HasColumnType("int");

                    b.HasKey("StudentGid")
                        .HasName("PK__tblStude__BCF7ACADF87B2EA3");

                    b.HasIndex("TblCountryCountryId");

                    b.HasIndex("TblGenderGenderId");

                    b.HasIndex("TblIdtypeIdtypeId");

                    b.ToTable("tblStudent", (string)null);
                });

            modelBuilder.Entity("StudentDbcode.Models.TblStudent", b =>
                {
                    b.HasOne("StudentDbcode.Models.TblCountry", "TblCountry")
                        .WithMany("tblStudent")
                        .HasForeignKey("TblCountryCountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentDbcode.Models.TblGender", "TblGender")
                        .WithMany("tblStudent")
                        .HasForeignKey("TblGenderGenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentDbcode.Models.TblIdtype", "TblIdtype")
                        .WithMany()
                        .HasForeignKey("TblIdtypeIdtypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TblCountry");

                    b.Navigation("TblGender");

                    b.Navigation("TblIdtype");
                });

            modelBuilder.Entity("StudentDbcode.Models.TblCountry", b =>
                {
                    b.Navigation("tblStudent");
                });

            modelBuilder.Entity("StudentDbcode.Models.TblGender", b =>
                {
                    b.Navigation("tblStudent");
                });
#pragma warning restore 612, 618
        }
    }
}
